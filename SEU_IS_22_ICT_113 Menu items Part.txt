void displayMenu() {
    printf("\n === TODAY MENU ===\n");
    delay(500);
    printf("      |DRINKS|\n");
    for(int i=0; i<menuCount; i++) {
        if(strcmp(menu[i].category, "Drinks") == 0) {
            printf("%d. %-20s LKR%.2f\n", menu[i].id, menu[i].name, menu[i].price);

            delay(100);
        }
    }
    printf("\n      |MAIN DISH|\n");
    for(int i=0; i<menuCount; i++) {
        if(strcmp(menu[i].category, "Main Dish") == 0) {
            printf("%d. %-20s LKR%.2f\n", menu[i].id, menu[i].name, menu[i].price);
            delay(100);
        }
    }
    printf("\n      |DESSERTS|\n");
    for(int i=0; i<menuCount; i++) {
        if(strcmp(menu[i].category, "Desserts") == 0) {
            printf("%d. %-20s LKR%.2f\n", menu[i].id, menu[i].name, menu[i].price);
            delay(100);
        }
    }
    printf("\n");
    delay(200);
}

MenuItem* findItem(int id) {
    for(int i=0; i<menuCount; i++) {
        if(menu[i].id == id) {
            return &menu[i];
        }
    }
    return NULL;
}

void placeOrder() {
    int itemId, quantity;
    char choice;
    do {
        displayMenu();
        printf("Enter item code: ");
        scanf("%d", &itemId);
        printf("Enter quantity: ");
        scanf("%d", &quantity);
        MenuItem *item = findItem(itemId);
        if(item == NULL) {
            printf("Invalid item code! Please try again.\n");
            delay(1000);
            continue;
        }
        if (orderCount >= MAX_ITEMS) {
            printf("Order list is full. Cannot add more items.\n");
            delay(1000);
            break;
        }
        orders[orderCount].item = item;
        orders[orderCount].quantity = quantity;
        orderCount++;
        printf("%s added to order.\n", item->name);
        delay(500);
        printf("Add another item? (y/n): ");
        scanf(" %c", &choice);
    } while(tolower(choice) == 'y');
}

void generateBill(int saveToFile) {
    float subtotal = 0, tax, total;
    if (orderCount == 0) {
        printf("\nNo items in the current order to generate a bill.\n");
        delay(1500);
        return;
    }
    printf("\n === BILL ===\n");
    delay(500);
    printf("%-5s %-20s %-8s %-9s\n", "Qty", "Item", "Price", "Total");
    delay(200);
    for(int i=0; i<orderCount; i++) {
        float itemTotal = orders[i].item->price * orders[i].quantity;
        printf("%-5d %-20s LKR%-7.2f LKR%-8.2f\n",
             orders[i].quantity,
             orders[i].item->name,
             orders[i].item->price,
             itemTotal);
        subtotal += itemTotal;
        delay(150);
    }
    tax = subtotal * TAX_RATE;
    total = subtotal + tax;
    printf("------------------------------------------\n");
    delay(200);
    printf("Subtotal:            LKR%.2f\n", subtotal);
    delay(200);
    printf("Tax (5%%):            LKR%.2f\n", tax);
    delay(200);
    printf("Total:               LKR%.2f\n", total);
    delay(200);
    printf("------------------------------------------\n");
    delay(200);
    if(saveToFile) {
        FILE *file = fopen("bill.txt", "a");
        if(file) {
            fprintf(file, "\n--- New Bill ---\n");
            fprintf(file, "%-5s %-20s %-8s %-9s\n", "Qty", "Item", "Price", "Total");
            for(int i=0; i<orderCount; i++) {
                fprintf(file, "%-5d %-20s LKR%-7.2f LKR%-8.2f\n",
                                 orders[i].quantity,
                                 orders[i].item->name,
                                 orders[i].item->price,
                                 orders[i].item->price * orders[i].quantity);
            }
            fprintf(file, "Subtotal:            LKR%.2f\n", subtotal);
            fprintf(file, "Tax (5%%):            LKR%.2f\n", tax);
            fprintf(file, "Total:               LKR%.2f\n", total);
            fclose(file);
            printf("\nBill details appended to bill.txt\n");
            delay(1000);
        } else {
            printf("Error: Could not open bill.txt for writing.\n");
            delay(500);
        }
    }
}